name: CI
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Init DB schema
        run: |
          python - <<'PY'
          from pathlib import Path
          import sqlite3

          BACKEND = Path("backend").resolve()
          DB = BACKEND / "surething.db"
          SQL = BACKEND / "db.sql"

          conn = sqlite3.connect(DB)
          conn.row_factory = sqlite3.Row
          conn.executescript(SQL.read_text(encoding="utf-8"))
          conn.commit()
          conn.close()
          print("DB schema created at", DB)
          PY


      - name: Import JSON into SQLite
        run: |
          python - <<'PY'
          from pathlib import Path
          import sqlite3
          import sys

          ROOT = Path(".").resolve()
          BACKEND = ROOT / "backend"
          SEED = ROOT / "seed"

          # add repo root to sys.path so `seed` can be imported
          sys.path.insert(0, str(ROOT))

          from seed import import_from_json as seeder

          conn = sqlite3.connect(str(BACKEND / "surething.db"))
          conn.row_factory = sqlite3.Row
          conn.execute("PRAGMA foreign_keys = ON;")

          seeder.run_with_existing_conn(conn, SEED)
          conn.close()
          print("JSON seeding completed.")
          PY


      - name: Backend smoke test
        env:
          PYTHONPATH: .
        run: |
          python - <<'PY'
          from backend.app import create_app
          app = create_app()
          with app.test_client() as c:
              for p in ("/api/accounts/", "/api/categories/", "/api/requests/"):
                  r = c.get(p); assert r.status_code == 200, (p, r.status_code, r.data[:200])
          print("âœ… Smoke test passed")
          PY
